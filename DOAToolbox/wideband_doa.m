function [N, phicapon, phimusic, thetaesprit, f] = wideband_doa(Y, l, fs, n, wlen, bins, olf, L)
%% Initializations
m = size(Y,2);
N = wlen + (wlen - olf)*(bins - 1);
Y = Y(1:(N),:);

%% FFT
% W is a wlen-by-bins-by-m matrix. First 2 dimensions make up the matrix
% generated by applying fft on "bins" windows of wlen, and the third dimension
% is for each microphone.
% W(i,j,k): i selects the frequency, j the sample( or bin) and k the
% microphone.
W = zeros(wlen,bins, m);
for i = 1:m
    % Compute a matrix for each microphone.
    [W(:,:,i),f] = fft_separate(Y(:,i), wlen, bins, fs, olf);
end
%% DOA estimation
phicapon = zeros(L, wlen/2);
phimusic = zeros(L, wlen/2);
thetaesprit = zeros(n, wlen/2);
for i = 1:wlen/2
    %For each frequency bin run the algorithms
    fi = i2fi(i,fs,wlen);
    %Select a frequency( first dimension of W and get all the samples from
    %all the microphones)
    Ytil = W(i,:,:);
    %Rotate to have an bins-by-m matrix. bins samples from m microphones
    Ytil = permute(Ytil, [2 3 1]);
    %% Capon DOA
    phicapon(:,i) = capon(Ytil, fi, l, L);
    %% Esprit DOA
    thetaesprit(:,i) = esprit(Ytil, fi, l, n);
    %D = abs(D);
    %thetaesprit = int16(thetaesprit);
    %take only D values very close to 1 ?
    %and only real values of theta
    %approximate to integer, add 90( [-90,90] to [0,180]) and set value
    %at phiesprit(inde
    %% MUSIC DOA
    phimusic(:,i) = music(Ytil, fi, l, L, n);
end
%% Esprit debugging
% fi = 1400;
% i = fi2i(fi,fs,wlen);
% fi = i2fi(i,fs, wlen);
% Ytil = W(i,:,:);
% Ytil = permute(Ytil, [2 3 1]);
% Ytil = 2*Ytil;
% [thetaespritdeb, D] = esprit(Ytil, fi, l, 2);
% D = abs(D);
% thetaespritdeb = int16(thetaespritdeb);

%% Plotting
% %Plot a single frequency
% figure
% t = (0:(N-1)) * 1/fi;
% plot(t(1:length(Ytil)), real(Ytil));
% xlabel('Time');
% ylabel('Value');
% title('Data set');
% legend('Sensor 1','Sensor 2','Sensor 3','Sensor 4','Sensor 5','Sensor 6','Sensor 7','Sensor 8');
% grid on

% %Plot the spectrum of a microphone
% figure
% plot(f,2*abs(W(1:wlen/2+1,1,1))) 
% title('Single-Sided Amplitude Spectrum of y(t)')
% xlabel('Frequency (Hz)')
% ylabel('|Y(f)|')
% grid on

%% Plot the spatial spectrum
% figure(1)
% x = ((0:(L-1)) .* pi/L - pi/2); % x in radians
% x = x * 180/pi; %x in degrees
% imagesc(x,f, phicapon.');
% xlabel('Degrees');
% ylabel('Frequency');
% title('Capon estimation');
% grid on
% 
% figure(2)
% x = ((0:(L-1)) .* pi/L - pi/2); % x in radians
% x = x * 180/pi; %x in degrees
% imagesc(x,f, phimusic.');
% xlabel('Degrees');
% ylabel('Frequency');
% title('MUSIC estimation');
% grid on

% figure
% surf(f ,-90:89, phiesprit);
% ylabel('Degrees');
% xlabel('Frequency');
% title('Esprit estimation');
